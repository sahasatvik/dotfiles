#!/usr/bin/bash

PANEL_FIFO=/tmp/panel-fifo
PANEL_FONT="Fira Code Nerd Font-10"
PANEL_HEIGHT=24
PANEL_FG="#969896"
PANEL_BG="#1D1F21"
PANEL_UL="#969896"

if [ $(pgrep -cx panel) -gt 1 ] ; then
        printf "%s\n" "The panel is already running." >&2
        exit 1
fi

bluetooth_connected() {
        bluetoothctl devices \
                | cut -f2 -d' ' \
                | while read uuid; do bluetoothctl info $uuid; done \
                | grep -e "Connected: yes"
}

trap 'bspc config top_padding 0; trap - TERM; kill 0' INT TERM QUIT EXIT

[ -e "$PANEL_FIFO" ] && rm "$PANEL_FIFO"
mkfifo "$PANEL_FIFO"


bspc config top_padding $PANEL_HEIGHT

bspc subscribe > "$PANEL_FIFO" &
xtitle -sf "TTL %s\n" > "$PANEL_FIFO" &

while true; do
        echo "CLK" $(date +"%T")
        sleep 1
done > "$PANEL_FIFO" &

while true; do
        echo "DAT" $(date "+%a %d %b")
        echo "BAT" $(cat /sys/class/power_supply/BAT0/capacity)
        echo "MEM" $(free -m | grep Mem | awk '{print $3}')

        sleep 5
done > "$PANEL_FIFO" &

while true; do
        netstatus="$(iwconfig wlp2s0)"

        essid="$(echo $netstatus | grep -oe 'ESSID:[^ ]*')"
        essid="${essid#ESSID:}"

        if [[ -z "$(bluetooth_connected)" ]]; then
                echo "BLUEoff"
        else
                echo "BLUEon"
        fi

        if [[ "$essid" =~ "off" ]]; then
                echo "NET off"
        else
                quality="$(echo $netstatus | grep -oe "Link Quality=[^ ]*/[^ ]*")"
                quality=${quality#Link Quality=}
                numerator="${quality%/*}"
                denominator="${quality#*/}"
                percent="$(($numerator * 100 / $denominator))"

                echo "NET" $percent $essid
        fi

        newmail="$(fd . ~/.mail/*/INBOX/new/ --type f | wc -l)"
        echo "MAIL" $newmail

        sleep 10
done > "$PANEL_FIFO" &

cmusstat="$(cmus-remote -C status | grep ^status | sed 's/^status //g')"
echo M$cmusstat > "$PANEL_FIFO" &

cat "$PANEL_FIFO" \
        | ~/bin/panel_bar \
        | lemonbar -F "$PANEL_FG" -B "$PANEL_BG" -U "$PANEL_UL" -f "$PANEL_FONT" -g x$PANEL_HEIGHT -a 32 \
        | sh &

until bar_id=$(xdo id -n lemonbar); do sleep 0.001; done
xdo above -t $(xdo id -n root) $bar_id


wait
