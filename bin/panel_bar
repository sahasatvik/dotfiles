#!/usr/bin/bash

verbose=""
music=""
record=""
power=""
memory=""
network=""

PANEL_FIFO=/tmp/panel-fifo

while read -r line; do
        case $line in
                verbose*)
                        if [[ -z $verbose ]]; then
                                verbose="yes"
                        else
                                verbose=""
                        fi
                        ;;
                C*)
                        clock="${line#?} "
                        clock="%{A:echo verbose > $PANEL_FIFO:}$clock%{A}"
                        ;;
                D*)
                        date="%{F#969896}${line#?}%{F-}"
                        ;;
                MEM*)
                        megs="${line#???}"
                        gigs=$(awk -v m=$megs 'BEGIN {printf "%.2f", m/1000}')
                        if [[ $megs -lt 1000 ]]; then
                                memory=" %{F#969896}${gigs}G%{F-} "
                        elif [[ $megs -lt 2000 ]]; then
                                memory=" %{F#cd9a76}${gigs}G%{F-} "
                        elif [[ $megs -lt 3000 ]]; then
                                memory=" %{F#ffaa55}${gigs}G%{F-} "
                        else
                                memory=" %{F#ff3334}${gigs}G%{F-} "
                        fi
                        ;;
                B*)
                        adapter="$(cat /sys/class/power_supply/ADP0/online)"
                        percent="${line#??}"
                        if [[ $adapter -eq "0" ]]; then
                                if [[ $percent -gt 50 ]]; then
                                        power=" %{F#969896}$percent%%%{F-} "
                                elif [[ $percent -gt 25 ]]; then
                                        power=" %{F#cd9a76}$percent%%%{F-} "
                                elif [[ $percent -gt 15 ]]; then
                                        power=" %{F#ffaa55}$percent%%%{F-} "
                                else
                                        power=" %{F#ff3334}$percent%%%{F-} "
                                fi
                        else
                                power=" %{F#969896}+$percent%%%{F-} "
                        fi
                        ;;
                N*)     
                        netstat="${line#??}"
                        if [[ $netstat == "off" ]]; then
                                network=""
                        else
                                percent="${netstat%% *}"
                                if [[ $percent -gt 80 ]]; then
                                        quality=""
                                elif [[ $percent -gt 60 ]]; then
                                        quality="%{F#969896}!%{F-}"
                                elif [[ $percent -gt 40 ]]; then
                                        quality="%{F#ffaa55}!%{F-}"
                                elif [[ $percent -gt 20 ]]; then
                                        quality="%{F#ff8855}!!%{F-}"
                                else
                                        quality="%{F#ff3334}!!%{F-}"
                                fi
                                essid=$(echo ${netstat#* } | tr -d '"')
                                network=" $quality%{F#969896}$essid%{F-} "
                        fi
                        ;;
                Mstopped*|Mexiting*)
                        music=""
                        ;;
                Mplaying*)
                        title="$(cmus-remote -C status | grep 'tag title' | sed 's/tag title //g')"
                        music="%{A:cmus-remote -u:}%{A} $title"
                        music="%{F#969896}$music%{F-}"
                        ;;
                Mpaused*)
                        title="$(cmus-remote -C status | grep 'tag title' | sed 's/tag title //g')"
                        music="%{A:cmus-remote -u:}%{A} $title"
                        music="%{F#969896}$music%{F-}"
                        ;;
                Rstarted*)
                        record="%{A:pkill -SIGTERM -x screenrecord.sh:}%{F#FF8B8B} 雷 %{F-}%{A}"
                        ;;
                Rprocessing*|Rdone*)
                        record=""
                        ;;
                W*)
                        wm_info=""
                        IFS=':'
                        set -- ${line#?}
                        while [ $# -gt 0 ]; do
                                item=$1
                                name=${item#?}
                                click="%{A:bspc desktop -f '$name':} $name %{A}"
                                case $item in
                                        O*)
                                                wm_info="$wm_info%{F#ffffff}%{B#373b41}$click%{B-}%{F-}"
                                                ;;
                                        F*)
                                                wm_info="$wm_info%{F#969896}%{B#373b41}$click%{B-}%{F-}"
                                                ;;
                                        o*)
                                                wm_info="$wm_info%{F#ffffff}$click%{F-}"
                                                ;;
                                        f*)
                                                wm_info="$wm_info%{F#969896}$click%{F-}"
                                                ;;
                                esac
                                shift
                        done
                        wm_info="%{A4:bspc desktop -f next.local:}$wm_info%{A}"
                        wm_info="%{A5:bspc desktop -f prev.local:}$wm_info%{A}"
                        ;;
        esac
        if [[ -z $verbose ]]; then
                echo "%{l}${wm_info}%{c}${music}%{r}${record}${date}${clock}"
        else
                echo "%{l}${wm_info}%{c}${music}%{r}${record}${network}${memory}${power}${date}${clock}"
        fi
done
