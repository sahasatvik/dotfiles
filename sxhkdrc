#
# wm hotkeys
#

# terminal emulator
super + Return
        urxvt

# program launcher
super + @space
        rofi -show run -modi run,drun

# calculator
super + alt @space
        rofi -show calc -modi calc

# browser
super + alt + b
        chrome --new-window

# make sxhkd reload its configuration files
super + alt + k
        pkill -USR1 -x sxhkd

# show keybindings
super + slash
        ~/bin/sxhkd_help.sh

#
# bspwm hotkeys
#

# quit/restart bspwm
super + alt + {q,r}
        bspc {quit,wm -r}

# close and kill
super + {_,shift + }w
        bspc node -{c,k}

# alternate between the tiled and monocle layout
super + m
        bspc desktop -l next

# send the newest marked node to the newest preselected node
super + y
        bspc node newest.marked.local -n newest.!automatic.local

# swap the current node and the biggest window
super + g
        bspc node -s biggest.window

#
# state/flags
#

# set the window state
super + {t,shift + t,s,f}
        bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

# set the node flags
super + ctrl + {m,x,y,z}
        bspc node -g {marked,locked,sticky,private}

#
# focus/swap
#

# focus the node in the given direction
super + {_,shift + }{h,j,k,l}
        bspc node -{f,s} {west,south,north,east}

# focus the node for the given path jump
super + {p,b,comma,period}
        bspc node -f @{parent,brother,first,second}

# focus the next/previous window in the current desktop
super + {_,shift + }c
        bspc node -f {next,prev}.local.!hidden.window

# focus the next/previous desktop in the current monitor
super + bracket{left,right}
        bspc desktop -f {prev,next}.local

# focus the last node/desktop
super + {grave,Tab}
        bspc {node,desktop} -f last

# focus the older or newer node in the focus history
super + {o,i}
        bspc wm -h off; \
        bspc node {older,newer} -f; \
        bspc wm -h on

# focus or send to the given desktop
super + {_,shift + }{1-9,0}
        bspc {desktop -f,node -d} '^{1-9,10}'

#
# preselect
#

# preselect the direction
super + ctrl + {h,j,k,l}
        bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
        bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
        bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
        bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#
# move/resize
#

# expand a window by moving one of its side outward
super + alt + {h,j,k,l}
        bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
        bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
super + {Left,Down,Up,Right}
        bspc node -v {-20 0,0 20,0 -20,20 0}

#
# screenshots
#

# take a screenshot of the whole screen
{super + alt + 4, Print}
        maim "$HOME/Pictures/screenshots/screenshot-$(date +%s).png"

# take a screenshot of a selection
super + alt + 5
        maim -s "$HOME/Pictures/screenshots/screenshot-$(date +%s).png"

# take a screenshot of a window
super + alt + 6
        maim -st 9999999 "$HOME/Pictures/screenshots/screenshot-$(date +%s).png"


#
# status
#

super + Escape
        notify-send -t 2000 -i none -u low "$(date +'%a %d %B %H:%M')" "$(~/bin/status.sh)" \
                -h string:x-canonical-private-synchronous:statusinfo

#
# media keys
#

# raise/lower volume
{XF86AudioRaiseVolume, XF86AudioLowerVolume}
        pamixer {--increase,--decrease} 5 && \
        notify-send -t 1000 -i none -u low "Volume : $(~/bin/volume.sh)" \
                -h int:value:"$(~/bin/volume.sh | sed 's/.$//')" \
                -h string:x-canonical-private-synchronous:volume

# toggle mute
XF86AudioMute
        pamixer --toggle-mute && \
        notify-send -t 1000 -i none -u low "Speakers : $(~/bin/muted.sh)" \
                -h string:x-canonical-private-synchronous:speakermute

# pause/play cmus
XF86AudioPlay
        cmus-remote -u

# next/previous track
{XF86AudioNext, XF86AudioPrev}
        cmus-remote -{n,r}

#
# backlight
#

# raise/lower brightness
{XF86MonBrightnessUp, XF86MonBrightnessDown}
        xbacklight -{inc,dec} 10 && \
        notify-send -t 1000 -i none -u low "Brightness : $(~/bin/brightness.sh)" \
                -h int:value:"$(~/bin/brightness.sh | sed 's/.$//')" \
                -h string:x-canonical-private-synchronous:brightness
